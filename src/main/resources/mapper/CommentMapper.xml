<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eh00.mapper.CommentMapper">
    <sql id="Base_Column_List">
        comment_id, comment_pid, comment_pname, comment_article_id, comment_author_name,
    comment_author_email, comment_author_url, comment_author_avatar, comment_content, comment_agent,
     comment_ip,comment_create_time, comment_role,comment_user_id
    </sql>

    <sql id="tb">comment</sql>

    <insert id="insertComment" useGeneratedKeys="true" keyProperty="commentId">
        INSERT INTO
            <include refid="tb" />
            (<include refid="Base_Column_List" />)
        VALUES (
            #{commentPid}, #{commentPname}, #{commentArticleId},#{commentAuthorName},
            #{commentAuthorEmail},#{commentAuthorUrl},#{commentAuthorAvatar},
            #{commentContent},#{commentAgent},#{commentIp}, #{commentCreateTime},
            #{commentRole},#{commentUserId}
        )
    </insert>

    <select id="listCommentByArticleId" resultType="Comment">
        SELECT
            <include refid="Base_Column_List" />
        FROM
            <include refid="tb" />
        WHERE
            comment_article_id = #{id}
    </select>

    <select id="getCommentById" resultType="Comment">
        SELECT
            <include refid="Base_Column_List" />
        FROM
            <include refid="tb" />
        WHERE
            comment_id = #{commentId}
    </select>

    <select id="listComment" resultType="Comment">
        SELECT
            <include refid="Base_Column_List" />
        FROM
            <include refid="tb" />
        <where>
            <if test="userId != null">
                comment_user_id = #{userId}
            </if>
        </where>
        ORDER BY comment_id DESC
    </select>

    <select id="getReceiveComment" resultType="Comment">
        SELECT
            <include refid="Base_Column_List" />
        FROM
            <include refid="tb" />
        <where>
            comment_article_id IN (
                <foreach collection="list" item="item" separator=",">
                    #{item}
                </foreach>
            )
        </where>
        ORDER BY comment_id DESC
    </select>

    <delete id="deleteById">
        DELETE FROM
            <include refid="tb" />
        WHERE
            comment_id = #{commentId}
    </delete>

    <delete id="deleteByUserId">
        DELETE FROM
            <include refid="tb" />
        WHERE
            comment_user_id = #{userId}
    </delete>

    <update id="update">
        UPDATE
            <include refid="tb" />
        <set>
            <if test="commentPid != null">comment_pid = #{commentPid},</if>
            <if test="commentPname != null">comment_pname = #{commentPname},</if>
            <if test="commentArticleId != null">comment_article_id = #{commentArticleId},</if>
            <if test="commentAuthorName != null">comment_author_name = #{commentAuthorName},</if>
            <if test="commentAuthorEmail != null">comment_author_email = #{commentAuthorEmail},</if>
            <if test="commentAuthorUrl != null">comment_author_url = #{commentAuthorUrl},</if>
            <if test="commentContent != null">comment_content = #{commentContent},</if>
            <if test="commentAgent != null">comment_agent = #{commentAgent},</if>
            <if test="commentIp != null">comment_ip = #{commentIp},</if>
            <if test="commentCreateTime != null">comment_create_time = #{commentCreateTime},</if>
            <if test="commentAuthorAvatar != null">comment_author_avatar = #{commentAuthorAvatar},</if>
            <if test="commentRole != null">comment_role = #{commentRole},</if>
            <if test="commentUserId != null">comment_user_id = #{commentUserId},</if>
        </set>
        WHERE
            comment_id = #{commentId}
    </update>

    <select id="countComment" resultType="Integer">
        SELECT
            COUNT (*)
        FROM
            <include refid="tb" />
    </select>

    <select id="listRecentComment" resultType="Comment">
        SELECT
            <include refid="Base_Column_List" />
        FROM
            <include refid="tb" />
        <where>
            <if test="userId != null">
                comment_user_id = #{userId}
            </if>
        </where>
        ORDER BY
            comment_id DESC
        LIMIT #{limit}
    </select>

    <select id="listChildComment" resultType="Comment">
        SELECT
            <include refid="Base_Column_List" />
        FROM
            <include refid="tb" />
        WHERE
            comment_pid = #{id}
    </select>
</mapper>